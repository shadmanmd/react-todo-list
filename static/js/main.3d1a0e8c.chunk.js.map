{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d1a0e8c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\n\t\n\tconst inputTextHandler = (e) => {\n\t\tsetInputText(e.target.value);\n\t};\n\t\n\tconst submitTodoHandler = (e) => {\n\t\te.preventDefault();\n\t\tsetTodos([\n\t\t\t...todos, {text: inputText, completed: false, id: Math.random()*1000}\n\t\t]);\n\t\tsetInputText(\"\");\n\t};\n\t\n\tconst statusHandler = (e) => {\n\t\tsetStatus(e.target.value);\n\t}\n\t\n\treturn(\n\t\t<form>\n\t\t\t<input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n\t\t\t<button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\n\t\t\t</button>\n\t\t\t<div>\n\t\t\t\t<select onChange={statusHandler} name=\"todos\">\n\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t<option value=\"completed\">Completed</option>\n\t\t\t\t\t<option value=\"uncompleted\">Uncompleted</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n\t\n\tconst deleteHandler = () => {\n\t\tsetTodos(todos.filter((el) => el.id !== todo.id));\n\t};\n\t\n\tconst completeHandler = () => {\n\t\tsetTodos(todos.map(item => {\n\t\t\tif(item.id === todo.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...item, completed: !item.completed\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn item;\n\t\t}));\n\t};\n\t\n\treturn(\n\t\t<div className=\"todo\">\n\t\t\t<li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n\t\t\t<button onClick={completeHandler} className=\"complete-btn\">\n\t\t\t\t<i className=\"fas fa-check\"></i>\n\t\t\t</button>\n\t\t\t<button onClick={deleteHandler} className=\"trash-btn\">\n\t\t\t\t<i className=\"fas fa-trash\"></i>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({ filteredTodos, todos, setTodos}) => {\n\treturn (\n\t\t<div className=\"todo-container\">\n\t\t\t<ul className=\"todo-list\">\n\t\t\t\t{filteredTodos.map(todo => (\n\t\t\t\t\t<Todo todo={todo} todos={todos} setTodos={setTodos} text={todo.text} key={todo.id} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n// Importing components\nimport Form from './Components/Form';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n\t\n\t// State\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [todos, setTodos] = useState([]);\n\tconst [status, setStatus] = useState(\"all\");\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\n\t\n\t// useEffect(function, state) - run the function every time the state changes\n\t// If we want it to run only once, then pass an empty array in place of the state\n\tuseEffect(() => {\n\t\tgetLocalTodos();\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tfilterHandler();\n\t\tsaveLocalTodos();\n\t}, [todos, status]);\n\t\n\t// Functions\n\tconst filterHandler = () => {\n\t\tswitch(status) {\n\t\t\tcase \"completed\":\n\t\t\t\tsetFilteredTodos(todos.filter(todo => todo.completed === true));\n\t\t\tbreak;\n\t\t\tcase \"uncompleted\":\n\t\t\t\tsetFilteredTodos(todos.filter(todo => todo.completed === false));\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetFilteredTodos(todos)\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t// Save to window.localStorage\n\tconst saveLocalTodos = () => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\n\t}\n\t\n\tconst getLocalTodos = () => {\n\t\tif(localStorage.getItem('todos') === null) {\n\t\t\tlocalStorage.setItem('todos', JSON.stringify([]));\n\t\t} else {\n\t\t\tlet todoLocal = JSON.parse(localStorage.getItem('todos'));\n\t\t\tsetTodos(todoLocal);\n\t\t}\n\t}\n\t\n  return (\n    <div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>Todo App</h1>\n\t\t\t</header>\n\t\t\t<Form \n\t\t\t\ttodos={todos} \n\t\t\t\tsetTodos={setTodos} \n\t\t\t\tinputText={inputText} \n\t\t\t\tsetInputText={setInputText} \n\t\t\t\tsetStatus={setStatus}\n\t\t\t/>\n\t\t\t<TodoList filteredTodos={filteredTodos} todos={todos} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}